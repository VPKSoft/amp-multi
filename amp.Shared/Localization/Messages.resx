<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConvertDatabase" xml:space="preserve">
    <value>Convert database</value>
  </data>
  <data name="DoYouWantToConvertTheOldDatabaseIntoTheNewFormatTheOperationMightTakeFewMinutes" xml:space="preserve">
    <value>Do you want to convert the old database into the new format? The operation might take few minutes.</value>
  </data>
  <data name="ConversionStatistics" xml:space="preserve">
    <value>{0}{1} tracks, {2} albums, {3} album entries and {4} queue snapshot entries will be converted.</value>
  </data>
  <data name="File0WasNotFound" xml:space="preserve">
    <value>File '{0}' was not found.</value>
  </data>
  <data name="Notification" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="TheDefaultAlbumCanNotBeRemovedOnlyRenamingIsPossible" xml:space="preserve">
    <value>The default album can not be removed. Only renaming is possible.</value>
  </data>
  <data name="Untitled" xml:space="preserve">
    <value>Untitled</value>
  </data>
  <data name="AlbumNameCanNotBeAnEmptyString" xml:space="preserve">
    <value>Album name can not be an empty string.</value>
  </data>
  <data name="SaveTheTagChangedThisWillModifyTheActualAudioFile" xml:space="preserve">
    <value>Save the tag changes? This will modify the actual audio file.</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="LoadingPercentage" xml:space="preserve">
    <value>Loading {0:F1} %</value>
  </data>
  <data name="YouAreAlreadyUsingTheLatestVersionOfTheSoftware" xml:space="preserve">
    <value>You are already using the latest version of the software.</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="PleaseSetTheHelpPathFromTheSettings" xml:space="preserve">
    <value>Please set the help path from the settings.</value>
  </data>
  <data name="OverrideCurrentQueueStash" xml:space="preserve">
    <value>Override current queue stash?</value>
  </data>
  <data name="NOTEBackupAndRestoreRequiresApplicationRestart" xml:space="preserve">
    <value>NOTE: Backup and restore requires application restart.</value>
  </data>
  <data name="TheApplicationWillNowExitReOpenTheApplicationManually" xml:space="preserve">
    <value>The application will now exit. Re-open the application manually.</value>
  </data>
  <data name="BackupCompleted" xml:space="preserve">
    <value>Backup completed</value>
  </data>
  <data name="ThePlaybackWillBeStoppedForTheBackup" xml:space="preserve">
    <value>The playback will be stopped for the backup.</value>
  </data>
  <data name="TheApplicationWillShutDownAfterTheBackupHasBeenRestoredStartTheSoftwareAgainManually" xml:space="preserve">
    <value>The application will shut down after the backup has been restored. Start the software again manually.</value>
  </data>
  <data name="BackupRestoreCompleted" xml:space="preserve">
    <value>Backup restore completed.</value>
  </data>
  <data name="AProcessIdentifierPIDToWaitForExitBeforeStartingTheApplication" xml:space="preserve">
    <value>A process identifier (PID) to wait for exit before starting the application.</value>
  </data>
  <data name="AFileNameToBackupTheApplicationDataBeforeCompleteStartup" xml:space="preserve">
    <value>A file name to backup the application data before complete startup.</value>
  </data>
  <data name="RestoresABackupFromAZippedFileIntoTheProgramApplicationDataFolderOverridingTheExisting" xml:space="preserve">
    <value>Restores a backup from a zipped file into the program application data folder overriding the existing.</value>
  </data>
  <data name="RequiredOption0IsMissing" xml:space="preserve">
    <value>Required option '{0}' is missing.</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="ERRORS" xml:space="preserve">
    <value>ERROR(S): </value>
  </data>
  <data name="USAGE" xml:space="preserve">
    <value>USAGE:</value>
  </data>
  <data name="DisplayThisHelpScreen" xml:space="preserve">
    <value>Display this help screen.</value>
  </data>
  <data name="DisplayMoreInformationOnASpecificCommand" xml:space="preserve">
    <value>Display more information on a specific command.</value>
  </data>
  <data name="DisplayVersionInformation" xml:space="preserve">
    <value>Display version information.</value>
  </data>
  <data name="Token0IsNotRecognized" xml:space="preserve">
    <value>Token '{0}' is not recognized.</value>
  </data>
  <data name="Option0HasNoValue" xml:space="preserve">
    <value>Option '{0}' has no value.</value>
  </data>
  <data name="AValueNotBoundToOptionNameIsDefinedWithABadFormat" xml:space="preserve">
    <value>A value not bound to option name is defined with a bad format.</value>
  </data>
  <data name="Option0IsDefinedWithABadFormat" xml:space="preserve">
    <value>Option '{0}' is defined with a bad format.</value>
  </data>
  <data name="ASequenceOption0IsDefinedWithFewerOrMoreItemsThanRequired" xml:space="preserve">
    <value>A sequence option '{0}' is defined with fewer or more items than required.</value>
  </data>
  <data name="Verb0IsNotRecognized" xml:space="preserve">
    <value>Verb '{0}' is not recognized.</value>
  </data>
  <data name="ASequenceValueNotBoundToOptionNameIsDefinedWithFewItemsThanRequired" xml:space="preserve">
    <value>A sequence value not bound to option name is defined with few items than required.</value>
  </data>
  <data name="NoVerbSelected" xml:space="preserve">
    <value>No verb selected.</value>
  </data>
  <data name="Option0IsDefinedMultipleTimes" xml:space="preserve">
    <value>Option '{0}' is defined multiple times.</value>
  </data>
  <data name="ErrorSettingValueToOption01" xml:space="preserve">
    <value>Error setting value to option '{0}': {1}</value>
  </data>
  <data name="Options0AreNotCompatibleWith1" xml:space="preserve">
    <value>Options: {0} are not compatible with {1}.</value>
  </data>
</root>